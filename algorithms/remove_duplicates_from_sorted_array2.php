<?php

/*
 * Дан целочисленный массив 'nums', отсортированный в неубывающем порядке , удалить некоторые дубликаты на месте так,
 * чтобы каждый уникальный элемент встречался не более двух раз . Относительный порядок элементов должен оставаться прежним .
 * Поскольку в некоторых языках невозможно изменить длину массива, вместо этого вы должны поместить результат в первую часть массива 'nums'.
 * Более формально, если есть 'k' элементы после удаления дубликатов, то первые 'k' элементы 'nums' должны содержать конечный результат.
 * Неважно, что вы оставляете после первых 'k' элементов.
 * Возврат 'k' после размещения окончательного результата в первых 'k' слотах 'nums' .
 * Не выделяйте дополнительное пространство для другого массива. Вы должны сделать это, изменив входной массив на месте с O(1) дополнительной памяти.
*/

declare(strict_types=1);

function removeDuplicates(array &$nums): int
{
    $n = count($nums);
    if ($n <= 2) return $n; // Если длина массива меньше или равна 2, возвращаем n

    $k = 2; // Начинаем с 2, так как первые два элемента всегда остаются

    for ($i = 2; $i < $n; $i++) {
        // Проверяем, если текущий элемент не равен элементу, который находится на позиции k-2
        if ($nums[$i] !== $nums[$k - 2]) {
            $nums[$k] = $nums[$i]; // Копируем элемент на позицию k
            $k++; // Увеличиваем указатель k
        }
    }

    return $k; // Возвращаем количество элементов
}

$nums = [1, 1, 1, 2, 2, 2, 5, 6, 7, 7, 7];
echo removeDuplicates($nums) . PHP_EOL;